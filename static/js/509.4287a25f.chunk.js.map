{"version":3,"file":"static/js/509.4287a25f.chunk.js","mappings":"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","sources":["components/Filter/styled.jsx","components/Filter/Filter.jsx","components/InputForm/styled.module.jsx","components/InputForm/InputForm.jsx","components/PhoneList/styled.jsx","components/PhoneList/PhoneList.jsx","components/VIews/Phonebook/styled.module.jsx","components/VIews/Phonebook/Phonebook.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const MyInput = styled.input`\n  padding: 5px 10px;\n\n  letter-spacing: 1px;\n\n  border-radius: 5px;\n  border: none;\n  box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000,\n    5px 5px 15px 5px rgba(0, 0, 0, 0);\n`;\n\nexport const MyP = styled.p`\n  margin-top: 0px;\n  margin-bottom: 10px;\n\n  font-weight: 300;\n  letter-spacing: 1px;\n  text-align: center;\n\n  color: #000000;\n  text-shadow: 1px 1px 0 #7a7a7a;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'Redux/Reducer/phonebook-slice';\nimport { Container, MyInput, MyP } from './styled';\n\nfunction Filter() {\n  const filter = useSelector(\n    ({\n      phonebookSlice: {\n        contacts: { filter },\n      },\n    }) => filter\n  );\n  const dispatch = useDispatch();\n\n  const handleFilter = e =>\n    dispatch(changeFilter(e.currentTarget.value.toLowerCase()));\n\n  return (\n    <Container>\n      <MyP>Find contacts by name</MyP>\n      <MyInput\n        type=\"text\"\n        onChange={handleFilter}\n        placeholder=\"Search...\"\n        value={filter}\n      />\n    </Container>\n  );\n}\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const MyForm = styled.form`\n  width: 100%;\n  margin-bottom: 30px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  & h2 {\n    font-size: 20px;\n    margin-top: 0px;\n    letter-spacing: 2px;\n    font-weight: 300;\n    color: #000;\n\n    text-shadow: 1px 1px 0 #7a7a7a;\n  }\n\n  & button {\n    padding: 5px 20px;\n    border-radius: 5px;\n\n    background-color: #000;\n    color: white;\n    font-size: 16px;\n    line-height: 1.3;\n    letter-spacing: 1px;\n\n    border: none;\n    cursor: pointer;\n    box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000,\n      5px 5px 15px 5px rgba(0, 0, 0, 0);\n    text-shadow: 0 0 10px #ffffff;\n  }\n`;\n\nexport const MyInput = styled.input`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n\n  letter-spacing: 1px;\n  color: #000;\n\n  box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000,\n    5px 5px 15px 5px rgba(0, 0, 0, 0);\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport phonebookOperations from 'Redux/Reducer/phonebook-operations';\nimport { MyForm, MyInput } from './styled.module';\n\nconst InputForm = () => {\n  // Hooks\n  const dispatch = useDispatch();\n  const phonebook = useSelector(\n    ({\n      phonebookSlice: {\n        contacts: { items },\n      },\n    }) => items\n  );\n  const [inputName, setInputName] = useState('');\n  const [inputPhone, setInputPhone] = useState('');\n\n  // Handle functions\n\n  const handleInputName = e => setInputName(e.currentTarget.value);\n  const handleInputPhone = e => setInputPhone(e.currentTarget.value);\n  const handleSubmitForm = e => {\n    e.preventDefault();\n\n    const data = newData();\n\n    if (checkUsers(data)) {\n      alert(`${data.name} is already in contacts`);\n      return false;\n    }\n\n    dispatch(phonebookOperations.addUserPhonebook(data));\n\n    if (data) {\n      setInputName('');\n      setInputPhone('');\n    }\n\n    return true;\n  };\n\n  // Helpers\n\n  const newData = () => ({\n    name: inputName,\n    number: inputPhone,\n  });\n\n  const checkUsers = phone =>\n    phonebook.find(\n      ({ name }) => name.toLowerCase() === phone.name.toLowerCase()\n    );\n\n  return (\n    <MyForm onSubmit={handleSubmitForm}>\n      <h2>Name</h2>\n      <MyInput\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        placeholder=\"Name surname\"\n        value={inputName}\n        required\n        onChange={handleInputName}\n      />\n      <h2>Phone</h2>\n      <MyInput\n        type=\"tel\"\n        name=\"phone\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        placeholder=\"+38 (099) 999-99-99\"\n        value={inputPhone}\n        required\n        onChange={handleInputPhone}\n      />\n\n      <button type=\"submit\">Add contact</button>\n    </MyForm>\n  );\n};\n\nexport default InputForm;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: inherit;\n\n  & p {\n    margin-top: 0px;\n    margin-bottom: 10px;\n\n    font-size: 30px;\n    font-weight: 300;\n    letter-spacing: 2px;\n    text-align: center;\n\n    color: #000000;\n    text-shadow: 1px 1px 0 #7a7a7a;\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  background-color: #000000;\n  color: white;\n\n  width: inherit;\n  list-style: none;\n\n  border-radius: 5px;\n\n  box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000,\n    5px 5px 15px 5px rgba(0, 0, 0, 0);\n\n  :not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n\n  & p {\n    margin: 0px;\n    padding: 5px 10px;\n\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 1px;\n    color: white;\n\n    text-transform: capitalize;\n    text-shadow: 0 0 10px #ffffff;\n\n    & span {\n      margin-left: 20px;\n    }\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  width: inherit;\n\n  margin: 0px;\n  padding: 0px;\n`;\n\nexport const MyBtn = styled.button`\n  padding: 5px 10px 5px 30px;\n\n  background-color: transparent;\n  color: white;\n  border: none;\n\n  text-shadow: 0 0 10px #ffffff;\n\n  text-transform: capitalize;\n  animation: change-color 3s linear 3 alternate;\n\n  cursor: pointer;\n\n  @keyframes change-color {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.3);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n`;\n","import React from 'react';\nimport { Container, List, ListItem, MyBtn } from './styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Bars } from 'react-loader-spinner';\nimport { useEffect } from 'react';\nimport phonebookOperations from 'Redux/Reducer/phonebook-operations';\n\nfunction PhoneList() {\n  const data = useSelector(\n    ({\n      phonebookSlice: {\n        contacts: { items },\n      },\n    }) => items\n  );\n\n  const filter = useSelector(\n    ({\n      phonebookSlice: {\n        contacts: { filter },\n      },\n    }) => filter\n  );\n\n  const dispatch = useDispatch();\n  const isFetching = useSelector(({ auth: { isLoggedIn } }) => isLoggedIn);\n\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchUserPhonebook());\n  }, [dispatch]);\n\n  const filterUsers = () =>\n    data.filter(item => item.name.toLowerCase().includes(filter));\n\n  const handleDeleteUser = id => {\n    dispatch(phonebookOperations.deleteUserNotes(id));\n  };\n\n  return (\n    <Container>\n      {!isFetching && (\n        <Bars\n          color=\"#acacac\"\n          wrapperStyle={{\n            justifyContent: 'center',\n          }}\n        />\n      )}\n\n      {isFetching && filterUsers().length === 0 && <p> There is no user</p>}\n\n      {isFetching && (\n        <List>\n          {filterUsers().map(item => (\n            <ListItem key={item.id}>\n              <p>\n                {item.name}: {item.number}\n              </p>\n              <MyBtn type=\"button\" onClick={() => handleDeleteUser(item.id)}>\n                x\n              </MyBtn>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n}\n\nexport default PhoneList;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n`;\n\nexport const MyHeader = styled.h2`\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  letter-spacing: 2px;\n  font-weight: 300;\n  color: #000;\n\n  text-shadow: 1px 1px 0 #7a7a7a;\n`;\n","import Filter from 'components/Filter/Filter';\nimport InputForm from 'components/InputForm/InputForm';\nimport PhoneList from 'components/PhoneList/PhoneList';\nimport { MyHeader, Container } from 'components/VIews/Phonebook/styled.module';\n\nfunction Phonebook() {\n  return (\n    <Container>\n      <MyHeader>Phonebook</MyHeader>\n      <InputForm />\n\n      <MyHeader>Contacts</MyHeader>\n      <Filter />\n      <PhoneList />\n    </Container>\n  );\n}\n\nexport default Phonebook;\n"],"names":["Container","styled","MyInput","MyP","filter","useSelector","phonebookSlice","contacts","dispatch","useDispatch","type","onChange","e","changeFilter","currentTarget","value","toLowerCase","placeholder","MyForm","phonebook","items","useState","inputName","setInputName","inputPhone","setInputPhone","newData","name","number","checkUsers","phone","find","onSubmit","preventDefault","data","alert","phonebookOperations","pattern","title","required","ListItem","List","MyBtn","isFetching","auth","isLoggedIn","useEffect","filterUsers","item","includes","color","wrapperStyle","justifyContent","length","map","onClick","id","MyHeader"],"sourceRoot":""}